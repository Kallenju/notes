user nginx;

worker_processes        auto;
worker_rlimit_nofile    655360;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/error.log debug;

events {
    use epoll;
    worker_connections 65536;
    multi_accept on;
}

http {
    resolver 127.0.0.11 ipv6=off;

    upstream backend {
        least_conn;
        server backend:3000 max_fails=5 fail_timeout=90s;
    }

    upstream frontend-server {
        least_conn;
        server frontend-server:3000 max_fails=5 fail_timeout=90s;
    }

    upstream backend_debug {
        server backend:9929;
    }

    upstream frontend-server_debug {
        server frontend-server:9929;
    }

    upstream pgadmin4 {
        server pgadmin4:80;
    }

    server {
        listen 80 default_server;

        server_name _;

        access_log /var/log/nginx/backend.log;

        location /api/ {
            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Connection "Close";
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;

            location /api/validate-token {
                internal;
            }

            location /api/microservices/issue-access-token {
                internal;
            }        
        }

        location / {           
            proxy_pass http://frontend-server/;
            proxy_http_version 1.1;
            proxy_set_header Connection "Close";
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
            proxy_set_header X-Forwarded-Port  $server_port;
        }
        
        sendfile on;
        tcp_nopush  on;
        # sets TCP_NODELAY flag, used on keep-alive connections
        tcp_nodelay on;
        keepalive_timeout 60;
        keepalive_requests 100000;
        reset_timedout_connection   on;
        types_hash_max_size 2048;
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;
        server_tokens off;

        client_body_buffer_size 16k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 16k;
        client_max_body_size 10M;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types
            application/javascript
            application/json
            application/xml+rss
            application/xml
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;

        proxy_intercept_errors on;
        error_page 404 = @400; # Treat invalid paths as bad requests
        location @400 { 
            return 400 '{"status":400,"message":"Bad request"}\n'; 
        }
    }

    server {
        listen 9929 default_server;

        server_name _;

        access_log /var/log/nginx/backend_debug.log;

        location /json/ {
            proxy_pass http://backend_debug/json/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location / {
            proxy_pass http://backend_debug/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }

    server {
        listen 9928 default_server;

        server_name _;

        access_log /var/log/nginx/frontend-server_debug.log;

        location /json/ {
            proxy_pass http://frontend-server_debug/json/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location / {
            proxy_pass http://frontend-server_debug/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }

    server {
        listen 5050 default_server;

        server_name _;

        access_log /var/log/nginx/pgadmin4.log;

        location / {
            proxy_pass http://pgadmin4/;
            proxy_set_header Host $host;
            proxy_redirect off;
        }
    }
}
