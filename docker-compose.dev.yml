version: '3.8'

name: notes-dev

volumes:
  notes-frontend-public:

networks:
  nginx-reversive-proxy:
  backend:
  notes-db:

services:
  nginx-reversive-proxy:
    image: nginx:1.25.3-alpine-slim
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/log/:/var/log/nginx/:rw
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      frontend-server:
        condition: service_healthy
      pgadmin4:
        condition: service_started
    ports:
      - target: 80
        host_ip: 0.0.0.0
        published: 8080
        protocol: tcp
        mode: host
      - '127.0.0.1:5050:5050'
      - '127.0.0.1:9929:9929'
      - '127.0.0.1:9928:9928'
    networks:
      - nginx-reversive-proxy

  backend:
    build:
      dockerfile: Dockerfile
      target: dev
      context: ./backend/
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    env_file:
      - path: ./backend/.development.env
        required: true
    networks:
      nginx-reversive-proxy:
        priority: 10
      backend:
        priority: 20
      notes-db:
        priority: 30
    volumes:
      - ./backend/src/:/usr/app/backend/src/:ro
      - ./backend/log/:/var/log/backend/:rw
    depends_on:
      notes-db:
        condition: service_healthy

  frontend-server:
    build:
      dockerfile: Dockerfile
      target: dev
      context: ./frontend-server/
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    env_file:
      - path: ./frontend-server/.development.env
        required: true
    networks:
      nginx-reversive-proxy:
        priority: 10
      backend:
        priority: 20
    volumes:
      - ./frontend-server/src/:/usr/app/frontend-server/src/:ro
      - notes-frontend-public:/usr/app/frontend/public/:ro
      - ./frontend/views/:/usr/app/frontend/views/:ro
      - ./frontend-server/log/:/var/log/frontend-server/:rw
    depends_on:
      frontend-static:
        condition: service_started
      backend:
        condition: service_healthy

  frontend-static:
    build:
      dockerfile: Dockerfile
      target: dev
      context: ./frontend/
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    volumes:
      - ./frontend/src/:/usr/app/frontend/src/:ro
      - notes-frontend-public:/usr/app/frontend/public/:rw

  notes-db:
    build:
      dockerfile: Dockerfile
      target: dev
      context: ./notes-db/
      shm_size: 256mb
    env_file:
      - path: ./notes-db/.development.env
        required: true
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    volumes:
      - ./notes-db/log/:/var/log/postgres/:rw
    shm_size: 256mb
    networks:
      - notes-db

  task-manager:
    build:
      dockerfile: Dockerfile
      target: dev
      context: ./task-manager/
    env_file:
      - path: ./notes-db/.development.env
        required: true
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    depends_on:
      notes-db:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      backend:
        priority: 10
      notes-db:
        priority: 20
    volumes:
      - ./task-manager/log/:/var/log/cron/:rw
      - ./task-manager/pgbackups/:/var/opt/pgbackups/:rw

  pgadmin4:
    build:
      dockerfile: Dockerfile
      target: dev
      context: ./pgadmin4/
    env_file:
      - path: ./pgadmin4/.development.env
        required: true
    stop_signal: SIGTERM
    stop_grace_period: 20s
    init: true
    restart: unless-stopped
    depends_on:
      notes-db:
        condition: service_healthy
    volumes:
      - ./pgadmin4/pgadmin4.dev.servers.json:/pgadmin4/servers.json:ro
    networks:
      nginx-reversive-proxy:
        priority: 10
      notes-db:
        priority: 20
