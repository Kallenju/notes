name: Publish Frontend

on:
  push:
    tags:
      - 'frontend@*'

env:
  CI: true

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.13.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.13.1
          cache: 'npm'

      - name: Instal root deps
        run: npm ci --workspaces=false

      - name: Create package specific package-lock.json
        run: NODE_NO_WARNINGS=1 node --loader ts-node/esm ./tools/buildPackageLock.ts frontend force

      - name: Instal frontend deps
        run: npm ci --workspace=frontend

      - name: Build frontend
        run: npm run build --workspace=frontend

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: public-build
          path: |
            frontend/public/
          retention-days: 1
          if-no-files-found: error

  upload-frontend:
    runs-on: ubuntu-latest

    needs: [build-frontend]

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: eu-central-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_FRONTEND_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: public-build
          path: |
            frontend/public/

      - name: Upload public and views to a frontend bucket
        run: |
          aws s3 sync frontend s3://${{ secrets.AWS_FRONTEND_BUCKET }} \
            --exclude '*' \
            --include 'public/*' --include 'views/*' \
            --delete

  restart-frontend-servers:
    runs-on: ubuntu-latest

    needs: [upload-frontend]

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: eu-central-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_SSM_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Container
        run: |
          aws ssm send-command \
            --document-name "${{ secrets.AWS_DEPLOY_DOCUMENT_NAME }}" \
            --targets "Key=instanceIds,Values=${{ secrets.AWS_DEPLOY_INSTANCES }}" \
            --parameters "${{ secrets.AWS_DEPLOY_DOCUMENT_PARAMETER }}=restart-swarm-notes-frontend-server.sh" \
            --region ${{ env.AWS_REGION }}
            --comment "Restart frontend-server container due to static frontend update"
